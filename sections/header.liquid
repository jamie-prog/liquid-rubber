<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">

<noscript>{{ 'component-list-menu.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-menu-drawer.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-cart-notification.css' | asset_url | stylesheet_tag }}</noscript>

<style>
   .search_nav_cus .header__icon.header__icon--search{
      width: auto;
  }
  .search_nav_cus .header__icon.header__icon--search svg{
        width: 25px !important;
  }
  .search_nav_cus .search-modal__content{
  }
  .search_nav_cus form.search-modal__form{
        border: 1px solid #000;
  }
    .search_nav_cus .search-modal__form .field:after,
  .search_nav_cus .search-modal__form .field:before{
    display:none;
  }
 .search_nav_cus .search-modal__form input{
       box-shadow: none;
    font-size: 16px;
    height: 48px;
       padding: 10px;
  }
   .search_nav_cus .search-modal__form label{
         font-size: 16px;
    top: 13px;
    left: 20px;
   }

 .search_nav_cus .field__input:-webkit-autofill~.field__label, 
 .search_nav_cus .field__input:focus~.field__label, 
 .search_nav_cus .field__input:not(:placeholder-shown)~.field__label{
      display:none;
  }
  .search_nav_cus .search-modal__form button{
        height: 50px;
  }
    .search_nav_cus .search-modal__form button svg{
          width: 25px;
    height: 25px;
    }
  .c-announcements .announcements {
    height:46px;
  }

  .disclosure__list#FooterCountryList{
    display: flex;
    flex-wrap: wrap;
    max-width: 7.5rem;
    min-height: 8rem;
  }

  .disclosure__list#FooterCountryList li:nth-child(2){
    order: 3;
  }

  .disclosure__list#FooterCountryList li:nth-child(3){
    order: 2;
  }
  
  header-drawer {
    justify-self: start;
    margin-left: -1.2rem;
  }

  @media screen and (min-width: 992px) {
    header-drawer {
      display: none;
    }
  }

  .menu-drawer-container {
    display: flex;
  }

  .list-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .list-menu--inline {
    display: inline-flex;
    flex-wrap: wrap;
  }

  summary.list-menu__item {
    padding-right: 2.7rem;
  }

  .list-menu__item {
    display: flex;
    align-items: center;
    line-height: calc(1 + 0.3 / var(--font-body-scale));
  }

  .list-menu__item--link {
    text-decoration: none;
    padding-bottom: 1rem;
    padding-top: 1rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
  }
  #menu-drawer .search_nav_cus{
    display:none;
  }

  @media screen and (min-width: 750px) {
    .list-menu__item--link {
      padding-bottom: 0.5rem;
      padding-top: 0.5rem;
    }
  }
  @media only screen and (max-width: 1199px) and (min-width: 992px){
    .l-header section.desktop-navigation .header__icons a {
        font-size: 18px;
    }
  }
   @media screen and (max-width: 991px) {
     .search_nav_cus .header__icon.header__icon--search {
    margin-left: 8px;
}
   }
   @media screen and (max-width: 575px) {
     .search_nav_cus .header__icon.header__icon--search {
      margin-left: 8px;
      position: absolute;
      left: 54px;
      top: -6px;
  }
     .search_nav_cus .header__icon.header__icon--search svg{
           width: 30px;
    height: 30px;
     }
   }
</style>

{%- style -%}
  .section-header {
  margin-bottom: {{ section.settings.margin_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
  .section-header {
  margin-bottom: {{ section.settings.margin_bottom }}px;
  }
  }
{%- endstyle -%}

<script src="{{ 'details-disclosure.js' | asset_url }}" defer></script>
<script src="{{ 'details-modal.js' | asset_url }}" defer></script>
<script src="{{ 'cart-notification.js' | asset_url }}" defer></script>

{%- capture contentForQuerystring -%}{{ content_for_header }}{%- endcapture -%}

{% comment %} Use string splitting to pull the value from content_for_header and apply some string clean up {% endcomment %}
{%- assign pageUrl = contentForQuerystring | split: '"pageurl":"' | last | split: '"' | first | split: '.myshopify.com' | last |
        replace: '\/', '/' |
        replace: '%20', ' ' |
        replace: '\u0026', '&' |
        replace: '&_fd=0&pb=0', '' |
        replace: '?_fd=0&pb=0', ''
-%}

<svg xmlns="http://www.w3.org/2000/svg" class="hidden">
  <symbol id="icon-search" viewbox="0 0 18 19" fill="none">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M11.03 11.68A5.784 5.784 0 112.85 3.5a5.784 5.784 0 018.18 8.18zm.26 1.12a6.78 6.78 0 11.72-.7l5.4 5.4a.5.5 0 11-.71.7l-5.41-5.4z" fill="currentColor"/>
  </symbol>

  <symbol id="icon-close" class="icon icon-close" fill="none" viewBox="0 0 18 17">
    <path d="M.865 15.978a.5.5 0 00.707.707l7.433-7.431 7.579 7.282a.501.501 0 00.846-.37.5.5 0 00-.153-.351L9.712 8.546l7.417-7.416a.5.5 0 10-.707-.708L8.991 7.853 1.413.573a.5.5 0 10-.693.72l7.563 7.268-7.418 7.417z" fill="currentColor"/>
  </symbol>
</svg>

<sticky-header class="color-background-1 gradient header-wrapper">
  <header class="header header--{{ section.settings.logo_position }} {% if section.settings.menu != blank %} header--has-menu{% endif %}">

    <section class="secondary-navigation d-none d-lg-block pt-md-2 pb-md-2">
      <div class="container">
        <div class="row align-items-center justify-content-lg-end">
          {%- if section.settings.secondary_menu_banner != blank -%}
            <div class="col-12 col-lg-6 col-xl-5 d-flex justify-content-lg-end justify-content-xl-center" rel="js-dl-contact-support-trigger">
              {{ section.settings.secondary_menu_banner }}              
            </div>
          {%- endif -%}
          <div class="col-12 col-lg-4 d-flex justify-content-lg-end">
            {%- if section.settings.secondary_menu != blank -%}
                    <nav>
                      {%- for link in section.settings.secondary_menu.links -%}
                        {% liquid
                            assign button_text = link.title
                            assign button_url = link.url

                             if shop.customer_accounts_enabled
                               if link.url == routes.account_login_url and customer
                                 assign button_text = 'My Account'
                                 assign button_url = routes.account_url
                               endif
                             endif
                        %}

                        <a href="{{ button_url }}" class="header__menu-item header__menu-item list-menu__item link link--text focus-inset {%- if link.current %} header__active-menu-item{%- endif -%}" {% if link.current %} aria-current="page"{% endif %}>
                          <span>{{ button_text | escape }}</span>
                        </a>
                      {%- endfor -%}
                    </nav>
              {%- endif -%}

            {%- if localization.available_countries.size > 1 -%}
              <noscript>
                {%- form 'localization', id: 'FooterCountryFormNoScript', class: 'localization-form' -%}
                  <div class="localization-form__select">
                    <select class="localization-selector link" name="country_code" aria-labelledby="FooterCountryLabelNoScript">
                      {%- for country in localization.available_countries -%}
                        <option value="{{ country.iso_code }}" {%- if country.iso_code == localization.country.iso_code %} selected{% endif %}>
                          {{ country.name | replace : 'United States','USA' | replace : 'United Kingdom','UK' }} {% comment %}({{ country.currency.iso_code }}) {{ country.currency.symbol }}{% endcomment %}
                        </option>
                      {%- endfor -%}
                    </select>
                    {% render 'icon-caret' %}
                  </div>
                  <button class="button button--tertiary">{{ 'localization.update_country' | t }}</button>
                {%- endform -%}
              </noscript>
              <localization-form>
                {%- form 'localization', id: 'FooterCountryForm', class: 'localization-form' -%}
                  <div class="no-js-hidden">
                    <div class="disclosure">
                      <button type="button" class="disclosure__button localization-form__select localization-selector link link--text caption-large" aria-expanded="false" aria-controls="FooterCountryList" aria-describedby="FooterCountryLabel">
                        {{ localization.country.name | replace : 'United States','USA' | replace : 'United Kingdom','UK' }} {% comment %}({{ localization.country.currency.iso_code }}) {{ localization.country.currency.symbol }}{% endcomment %}
                        {% render 'icon-caret' %}
                      </button>
                      <ul id="FooterCountryList" role="list" class="disclosure__list list-unstyled" hidden>
                        {%- for country in localization.available_countries -%}
                          <li class="disclosure__item" tabindex="-1">
                            <a class="link link--text disclosure__link {% if country.iso_code == localization.country.iso_code %} disclosure__link--active{% endif %} focus-inset" href="#"{% if country.iso_code == localization.country.iso_code %} aria-current="true"{% endif %} data-value="{{ country.iso_code }}">
                              <span class="localization-form__currency">{{ country.name | replace : 'United States','USA' | replace : 'United Kingdom','UK' }} {% comment %}({{ country.currency.iso_code }}) {{ country.currency.symbol }}{% endcomment %}</span>
                            </a>
                          </li>
                        {%- endfor -%}
                      </ul>
                    </div>
                    <input type="hidden" name="country_code" value="{{ localization.country.iso_code }}">
                  </div>
                {%- endform -%}
              </localization-form>
            {%- endif -%}
          </div>
        </div>
      </div>
    </section>

    <section class="desktop-navigation">
      <div class="container d-none d-lg-block">
        <div class="row">
          <div class="col-12 col-lg-3 d-lg-flex justify-content-md-start logo-container">
            <a href="{{ routes.root_url }}">
              {% render 'liquid-rubber-logo-border-svg', additional_class: 'header__heading-logo header__desktop-logo' %}
            </a>
          </div>

          {%- if section.settings.menu != blank -%}
            <div class="col-12 col-lg-5">
              <nav>
                <ul class="list-menu list-menu--inline" role="list">
                  {%- for link in section.settings.menu.links -%}
                    <li>
                      {%- if link.links != blank -%}
                        {% assign nav_lable = link.title %}
                        <details-disclosure>
                          <details id="Details-HeaderMenu-{{ forloop.index }}">
                            <summary class="header__menu-item list-menu__item link focus-inset">
                              <span {%- if link.child_active %} class="header__active-menu-item"{% endif %}>{{ link.title | escape }}</span>
                              {% render 'icon-caret' %}
                            </summary>
                            <ul id="HeaderMenu-MenuList-{{ forloop.index }}" class="header__submenu list-menu list-menu--disclosure caption-large motion-reduce" role="list" tabindex="-1">
                              {% assign header_menu_index = forloop.index %}

                              {%- for childlink in link.links -%}
                                {% liquid
                                   assign child_button_text = childlink.title
                                   assign child_button_url = childlink.url
                                   assign menu_header = child_button_text

                                   if shop.customer_accounts_enabled
                                     if childlink.url == routes.account_login_url and customer
                                       assign child_button_text = 'My Account'
                                       assign child_button_url = routes.account_url
                                     endif
                                   endif
                                   
                                %}

                                <li>
                                  <a href="{{ child_button_url }}" class="header__menu-item list-menu__item link link--text focus-inset caption-large{% if childlink.current %} list-menu__item--active{% endif %}"{% if childlink.current %} aria-current="page"{% endif %}>
                                    {{ child_button_text | escape }}
                                    {% render 'text-brushstroke' %}
                                  </a>

                                  <ul id="HeaderMenu-SubMenuList-{{ forloop.index }}" class="header__submenu list-menu motion-reduce">
                                    {%- for grandchildlink in childlink.links -%}
                                      <li>
                                        {% liquid
                                           assign current = false

                                           if grandchildlink.current
                                             if pageUrl == grandchildlink.url
                                               assign current = true
                                             endif
                                           endif

                                           if header_menu_index == 2
                                             if pageUrl == grandchildlink.url
                                               assign current = true
                                             endif
                                           endif
                                        %}

                                        <a href="{{ grandchildlink.url }}" class="header__menu-item list-menu__item link link--text focus-inset caption-large{% if current %} list-menu__item--active{% endif %}"{% if current %} aria-current="page"{% endif %} data-nav-label="{{ nav_lable }}" data-menu-header="{{ menu_header }}" data-link-name="{{ grandchildlink.title | escape }}" rel="js-dl-nav-menu-trigger" >
                                        <span>
                                          {{ grandchildlink.title | escape }}
                                          {% render 'icon-hover-arrow' %}
                                        </span>
                                        </a>
                                      </li>
                                    {%- endfor -%}
                                  </ul>
                                </li>
                              {%- endfor -%}
                            </ul>
                          </details>
                        </details-disclosure>
                      {%- else -%}
                        {% liquid
                          assign button_text = link.title
                          assign button_url = link.url

                           if shop.customer_accounts_enabled
                             if link.url == routes.account_login_url and customer
                               assign button_text = 'My Account'
                               assign button_url = routes.account_url
                             endif
                           endif

                           assign url_title = button_url | downcase
                        %}
                        <a href="{{ button_url }}" class="header__menu-item header__menu-item list-menu__item link link--text focus-inset {% if url_title == 'home' or link.url == '/' %} d-lg-none{% endif %}" {% if link.current %} aria-current="page"{% endif %}>
                          <span {%- if link.current %} class="header__active-menu-item"{% endif %}>{{ button_text | escape }}</span>
                        </a>
                      {%- endif -%}
                    </li>
                  {%- endfor -%}
                </ul>
              </nav>
            </div>
          {%- endif -%}

          <div class="col-12 col-lg-4 d-lg-flex justify-content-md-end">
            {% render 'main-navigation-icons', desktop: true, include_cart: true, id: 'desktop' %}
          </div>
        </div>
      </div>
    </section>

    {%- if section.settings.menu != blank -%}
      <section class="mobile-navigation d-block d-lg-none">
        <div class="container">
          <div class="row align-items-center justify-content-around">
            <div class="col-2 col-md-1">
              <header-drawer data-breakpoint="tablet">
                <details id="Details-menu-drawer-container" class="menu-drawer-container">
                  <summary class="header__icon--menu header__icon--summary link focus-inset" aria-label="{{ 'sections.header.menu' | t }}">
                    <div class="icon-container">
                    <span class="icons">
                      {% render 'icon-hamburger' %}
                      {% render 'icon-close' %}
                    </span>
                      <span>Menu</span>
                    </div>
                  </summary>
                  <div id="menu-drawer" class="menu-drawer motion-reduce" tabindex="-1">
                    <div class="menu-drawer__inner-container">
                      <div class="menu-drawer__navigation-container">
                        <nav class="menu-drawer__navigation">
                          <ul class="menu-drawer__menu list-menu" role="list">
                            {%- for link in section.settings.menu.links -%}
                              <li>
                                {%- if link.links != blank -%}

                                  {% assign nav_lable = link.title %}
                                  <details class="primary-navigation">
                                    <summary class="link link--text list-menu__item focus-inset{% if link.child_active %} menu-drawer__menu-item--active{% endif %}">
                                      {{ link.title | escape }}
                                      {% render 'icon-caret' %}
                                    </summary>
                                    <div id="link-{{ link.title | escape }}" class="secondary-navigation-container motion-reduce" tabindex="-1">
                                      <div class="menu-drawer__inner-submenu">
                                        <ul class="list-menu" role="list" tabindex="-1">
                                          {%- for childlink in link.links -%}

                                            {% liquid
                                              assign child_button_text = childlink.title
                                              assign child_button_url = childlink.url
                                              assign menu_header = child_button_text

                                              if shop.customer_accounts_enabled
                                                if childlink.url == routes.account_login_url and customer
                                                  assign child_button_text = 'My Account'
                                                  assign child_button_url = routes.account_url
                                                endif
                                              endif
                                            %}

                                            <li>
                                              {%- if childlink.links == blank -%}
                                                <a href="{{ child_button_url }}" class="menu-drawer__menu-item link link--text list-menu__item focus-inset{% if childlink.current %} menu-drawer__menu-item--active{% endif %}"{% if childlink.current %} aria-current="page"{% endif %}>
                                                  {{ child_button_text | escape }}
                                                </a>
                                              {%- else -%}
                                                <details id="Details-menu-drawer-submenu-{{ forloop.index }}" class="secondary-navigation">
                                                  <summary class="link link--text list-menu__item focus-inset">
                                                    {{ childlink.title | escape }}

                                                    <div class="icon-container">
                                                      {% render 'icon-plus' %}
                                                      {% render 'icon-minus' %}
                                                    </div>

                                                    {% render 'text-brushstroke' %}
                                                  </summary>
                                                  <div id="childlink-{{ childlink.title | escape }}" class="tertiary-navigaiton motion-reduce">
                                                    <ul class="list-menu" role="list" tabindex="-1">
                                                      {%- for grandchildlink in childlink.links -%}
                                                        {% liquid
                                                          assign grand_child_button_text = grandchildlink.title
                                                          assign grand_child_button_url = grandchildlink.url
                                                          

                                                          if shop.customer_accounts_enabled
                                                            if grandchildlink.url == routes.account_login_url and customer
                                                              assign grand_child_button_text = 'My Account'
                                                              assign grand_child_button_url = routes.account_url
                                                            endif
                                                          endif
                                                        %}

                                                        <li>
                                                          <a href="{{ grand_child_button_url }}" class="menu-drawer__menu-item link link--text list-menu__item focus-inset{% if grandchildlink.current %} menu-drawer__menu-item--active{% endif %}"{% if grandchildlink.current %} aria-current="page"{% endif %} rel="js-dl-nav-menu-trigger" data-nav-label="{{ nav_lable }}" data-menu-header="{{ menu_header }}" data-link-name="{{ grandchildlink.title | escape }}">
                                                            {{ grand_child_button_text | escape }}

                                                            {% render 'icon-hover-arrow' %}
                                                          </a>
                                                        </li>
                                                      {%- endfor -%}
                                                    </ul>
                                                  </div>
                                                </details>
                                              {%- endif -%}
                                            </li>
                                          {%- endfor -%}
                                        </ul>
                                      </div>
                                    </div>
                                  </details>
                                {%- else -%}

                                  {% liquid
                                    assign button_text = link.title
                                    assign button_url = link.url

                                    if shop.customer_accounts_enabled
                                      if link.url == routes.account_login_url and customer
                                        assign button_text = 'My Account'
                                        assign button_url = routes.account_url
                                      endif
                                    endif
                                  %}

                                  <a href="{{ button_url }}" class="menu-drawer__menu-item list-menu__item link link--text focus-inset{% if link.current %} menu-drawer__menu-item--active{% endif %}"{% if link.current %} aria-current="page"{% endif %}>
                                    {{ button_text | escape }}
                                  </a>
                                {%- endif -%}
                              </li>
                            {%- endfor -%}

                            {%- for link in section.settings.secondary_menu.links -%}
                              {% liquid
                                assign button_text = link.title
                                assign button_url = link.url

                                if shop.customer_accounts_enabled
                                  if link.url == routes.account_login_url and customer
                                    assign button_text = 'My Account'
                                    assign button_url = routes.account_url
                                  endif
                                endif
                              %}

                              <li>
                                <a href="{{ button_url }}" class="menu-drawer__menu-item list-menu__item link link--text focus-inset{% if link.current %} menu-drawer__menu-item--active{% endif %}"{% if link.current %} aria-current="page"{% endif %}>
                                  {{ button_text | escape }}
                                </a>
                              </li>
                            {%- endfor -%}

                            {%- if localization.available_countries.size > 1 -%}
                              <li>
                                <details class="primary-navigation">
                                  <summary class="link link--text list-menu__item focus-inset{% if link.child_active %} menu-drawer__menu-item--active{% endif %}">
                                    {{ localization.country.name | replace : 'United States','USA' | replace : 'United Kingdom','UK' }} {% comment%}{{ localization.country.currency.iso_code }} {{ localization.country.currency.symbol }}{% endcomment%}
                                    {% render 'icon-caret' %}
                                  </summary>

                                  <div id="link-localization-form" class="secondary-navigation-container motion-reduce" tabindex="-1">
                                    <noscript>
                                      {%- form 'localization', id: 'FooterCountryFormNoScript', class: 'localization-form' -%}
                                        <div class="localization-form__select">
                                          <select class="localization-selector link" name="country_code" aria-labelledby="FooterCountryLabelNoScript">
                                            {%- for country in localization.available_countries -%}
                                              <option value="{{ country.iso_code }}" {%- if country.iso_code == localization.country.iso_code %} selected{% endif %}>
                                                {{ country.name | replace : 'United States','USA' | replace : 'United Kingdom','UK' }} {% comment%}{{ country.currency.iso_code }} {{ country.currency.symbol }}){% endcomment%}
                                              </option>
                                            {%- endfor -%}
                                          </select>
                                          {% render 'icon-caret' %}
                                        </div>
                                        <button class="button button--tertiary">{{ 'localization.update_country' | t }}</button>
                                      {%- endform -%}
                                    </noscript>
                                    <localization-form>
                                      {%- form 'localization', id: 'FooterCountryForm', class: 'localization-form' -%}
                                        <div class="no-js-hidden">
                                          <div class="disclosure">
                                            <button type="button" class="disclosure__button localization-form__select localization-selector link link--text caption-large" aria-expanded="false" aria-controls="FooterCountryList" aria-describedby="FooterCountryLabel">
                                              {{ localization.country.name | replace : 'United States','USA' | replace : 'United Kingdom','UK' }} {% comment%}{{ localization.country.currency.iso_code }} {{ localization.country.currency.symbol }}{% endcomment%}
                                              {% render 'icon-caret' %}
                                            </button>
                                            <ul id="FooterCountryList" role="list" class="disclosure__list list-unstyled">
                                              {%- for country in localization.available_countries -%}
                                                <li class="disclosure__item" tabindex="-1">
                                                  <a class="link link--text disclosure__link {% if country.iso_code == localization.country.iso_code %} disclosure__link--active{% endif %} focus-inset" href="#"{% if country.iso_code == localization.country.iso_code %} aria-current="true"{% endif %} data-value="{{ country.iso_code }}">
                                                    <span class="localization-form__currency">{{ country.name | replace : 'United States','USA' | replace : 'United Kingdom','UK' }} {% comment%}{{ country.currency.iso_code }} {{ country.currency.symbol }}{% endcomment%}</span>
                                                  </a>
                                                </li>
                                              {%- endfor -%}
                                            </ul>
                                          </div>
                                          <input type="hidden" name="country_code" value="{{ localization.country.iso_code }}">
                                        </div>
                                      {%- endform -%}
                                    </localization-form>
                                  </div>
                                </details>
                              </li>
                            {%- endif -%}

                          </ul>
                          {% render 'main-navigation-icons', include_cart: false, desktop: false, id: 'mobile-inner' %}
                        </nav>
                      </div>
                    </div>
                  </div>
                </details>
              </header-drawer>
            </div>
            <div class="col-auto col-md-8 logo-container">
              <a href="{{ routes.root_url }}">
                {% render 'liquid-rubber-logo-svg', additional_class: 'header__heading-logo mobile-header--logo' %}
              </a>
            </div>
            <div class="col-4 col-md-3">
              {% render 'main-navigation-icons', include_cart: true, id: 'mobile' %}
            </div>
          </div>
        </div>
      </section>
    {%- endif -%}
  </header>
</sticky-header>

<script>
  $(document).ready(function() {  
    //Start DataLayer
    $('div[rel="js-dl-contact-support-trigger"] a').click(function(){                  
      utag.link({
        event_type: "contact_us",
        type: $(this).text(),
      });
    });

    $('a[rel="js-dl-nav-menu-trigger"]').click(function(){       
      
      let $navLabel = $(this).data("nav-label"),
          $subType =  $(this).data("menu-header"),
          $contentId =  $(this).data("link-name")
      
      utag.link({
        event_type: "select_content",
        content_type: $navLabel,
        content_subtype: $subType,
        content_id: $contentId
      });
    
    });
    //End DataLayer
});
</script>

{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.getElementsByClassName('l-header')[0];
      this.headerBounds = {};
      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => this.preventReveal = true;

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        requestAnimationFrame(this.reset.bind(this));
      }


      this.currentScrollTop = scrollTop;
    }

    hide() {
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
    }

    reveal() {
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('details-disclosure');
      this.disclosures.forEach(disclosure => disclosure.close());
    }
  }

  customElements.define('sticky-header', StickyHeader);

class LocalizationForm extends HTMLElement {
  constructor() {
  super();
    this.elements = {
      input: this.querySelector('input[name="locale_code"], input[name="country_code"]'),
      button: this.querySelector('button'),
      panel: this.querySelector('ul'),
    };
    this.elements.button.addEventListener('mouseenter', this.openSelector.bind(this));
    this.addEventListener('mouseleave', this.closeSelector.bind(this));
    this.addEventListener('keyup', this.onContainerKeyUp.bind(this));

    this.querySelectorAll('a').forEach(item => item.addEventListener('click', this.onItemClick.bind(this)));
  }

    hidePanel() {
      this.elements.button.setAttribute('aria-expanded', 'false');
      this.elements.panel.setAttribute('hidden', true);
    }

    onContainerKeyUp(event) {
      if (event.code.toUpperCase() !== 'ESCAPE') return;

      this.hidePanel();
      this.elements.button.focus();
    }

    onItemClick(event) {
      event.preventDefault();
      const form = this.querySelector('form');
      this.elements.input.value = event.currentTarget.dataset.value;      
      if (form) {
        utag.link({
            event_type: "select_content",
            user_country: this.elements.input.value,
        });
        form.submit();
      }
    }

    openSelector() {
      this.elements.button.focus();
      this.elements.panel.toggleAttribute('hidden');
      this.elements.button.setAttribute('aria-expanded', (this.elements.button.getAttribute('aria-expanded') === 'false').toString());
    }

    closeSelector(event) {
      const shouldClose = event.relatedTarget && event.relatedTarget.nodeName !== 'UL';
      if (event.relatedTarget === null || shouldClose) {
      this.hidePanel();
    }
  }
}

customElements.define('localization-form', LocalizationForm);
{% endjavascript %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if section.settings.logo %}
{% assign image_size = section.settings.logo.width | append: 'x' %}
      "logo": {{ section.settings.logo | image_url: image_size | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ shop.url | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = shop.url | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ shop.url | append: page.url | json }}
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "settings": [
    {
      "type": "image_picker",
      "id": "logo",
      "label": "t:sections.header.settings.logo.label",
      "info": "Recommended image size: 200x100px"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "link_list",
      "id": "secondary_menu",
      "label": "Secondary Menu"
    },
    {
      "type": "richtext",
      "id": "secondary_menu_banner",
      "label": "Secondary Menu Banner"
    }
  ]
}
{% endschema %}
